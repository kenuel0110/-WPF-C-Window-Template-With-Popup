<Application x:Class="WindowTemplateWithPopup.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WindowTemplateWithPopup"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            
            <!--Colors-->
            <Color x:Key="PrimaryColor">#FF8C1857</Color>
            <Color x:Key="SecondaryColor">#FF520931</Color>
            <Color x:Key="Background">#202020</Color>
            <Color x:Key="Background_Dark">#0e101f</Color>
            <Color x:Key="Background_Popup">#333333</Color>
            <Color x:Key="Background_Button_TitleBar">#3f3f41</Color>
            <Color x:Key="Background_Button_Hover_TitleBar">#3f3f41</Color>
            <Color x:Key="Background_Button_Close">#6a000d</Color>
            <Color x:Key="Background_Button_Main">#1d495d</Color>
            <Color x:Key="Background_Button_Accent">#122E3B</Color>
            <Color x:Key="Background_Button_Hover_Accent">#0E212A</Color>
            <Color x:Key="Background_Button_Hover_Main">#091820</Color>
            <Color x:Key="Background_Context_menu">#FF222222</Color>
            <Color x:Key="Foreground_Header">#f1f1f1</Color>
            <Color x:Key="Foreground_Text">#bebebe</Color>
            <Color x:Key="Background_Popup_Titlebar">#282c2f</Color>

            <SolidColorBrush x:Key="window_background" Color="{StaticResource Background}"/>
            <SolidColorBrush x:Key="window_titlebar" Color="{StaticResource Background_Dark}"/>
            <SolidColorBrush x:Key="popup_background" Color="{StaticResource Background_Popup}"/>
            <SolidColorBrush x:Key="foreground_header" Color="{StaticResource Foreground_Header}"/>
            <SolidColorBrush x:Key="foreground_text" Color="{StaticResource Foreground_Text}"/>
            <SolidColorBrush x:Key="button_titlebar_hover_background" Opacity="0.5" Color="{StaticResource Background_Button_Hover_TitleBar}"/>
            <SolidColorBrush x:Key="button_hover_main_background" Opacity="0.5" Color="{StaticResource Background_Button_Hover_Main}"/>
            <SolidColorBrush x:Key="button_close_hover_background" Opacity="0.5" Color="{StaticResource Background_Button_Close}"/>
            <SolidColorBrush x:Key="button_main_background" Color="{StaticResource Background_Button_Main}"/>
            <SolidColorBrush x:Key="button_accent_background" Color="{StaticResource Background_Button_Accent}"/>
            <SolidColorBrush x:Key="button_accent_hover_background" Color="{StaticResource Background_Button_Hover_Accent}"/>
            <SolidColorBrush x:Key="context_menu_background" Color="{StaticResource Background_Context_menu}"/>
            <SolidColorBrush x:Key="context_menu_hover_background" Color="{StaticResource Background_Context_menu}"/>
            <SolidColorBrush x:Key="popup_titlebar_background" Color="{StaticResource Background_Popup_Titlebar}"/>
            <!--======-->
            
            <!--Icons-->
            <BitmapImage x:Key="ic_logo" UriSource="/Icons\logo_window.png"/>
            <BitmapImage x:Key="ic_hide" UriSource="/Icons\btn_hide.png"/>
            <BitmapImage x:Key="ic_maximilize" UriSource="/Icons\btn_maximilize.png"/>
            <BitmapImage x:Key="ic_close" UriSource="/Icons\btn_close.png"/>
            <!--=====-->

            <!--Fonts-->
            <FontFamily x:Key="LackRegular">/Fonts/Lackregular.ttf #Lack Regular</FontFamily>
            <FontFamily x:Key="LackItalic">/Fonts/Lackitalic.ttf #Lack Italic</FontFamily>
            <!--=====-->

            <!--Sizes-->
            <CornerRadius x:Key="size_CornerRadiusValue">25</CornerRadius>
            <CornerRadius x:Key="size_CornerRadiusSlidedownPopup">8</CornerRadius>
            <CornerRadius x:Key="size_CornerRadiusPopupTitlebar">25 25 0 0</CornerRadius>
            <CornerRadius x:Key="size_CornerRadiusButton">5</CornerRadius>
            <sys:Double x:Key="size_textblock_header">18</sys:Double>
            <sys:Double x:Key="size_textblock_text">14</sys:Double>
            <sys:Double x:Key="size_textblock_title_window">12</sys:Double>
            <sys:Double x:Key="size_button_text">13</sys:Double>
            <sys:Double x:Key="size_control_button_height">34</sys:Double>
            <sys:Double x:Key="size_control_button_width">34</sys:Double>
            <sys:Double x:Key="size_control_popup_button_height">24</sys:Double>
            <sys:Double x:Key="size_control_popup_button_width">24</sys:Double>
            <Thickness x:Key="size_control_image_margin">6</Thickness>
            <sys:Double x:Key="size_shadow_button">6</sys:Double>
            <sys:Double x:Key="size_shadow_depth_button">3</sys:Double>
            <sys:Double x:Key="size_shadow_opacity_button">0.2</sys:Double>
            <Thickness x:Key="size_small_padding">5</Thickness>
            <Thickness x:Key="size_medium_padding">25</Thickness>
            <sys:Double x:Key="size_minheight">64</sys:Double>
            <sys:Double x:Key="size_minwidth">128</sys:Double>
            <Thickness x:Key="size_small_margin">5</Thickness>
            <Thickness x:Key="size_medium_margin">25</Thickness>
            <!--=====-->

            <!--Styles-->
                <!--Border-->
                <Style x:Key="popup_border" TargetType="Border" BasedOn="{StaticResource MaterialDesignToolBarMainPanelBorderStyle}">
                    <Setter Property="Background" Value="{StaticResource popup_background}"/>
                    <Setter Property="CornerRadius" Value="{StaticResource size_CornerRadiusValue}"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="{StaticResource size_medium_margin}"/>
                    <Setter Property="MinHeight" Value="{StaticResource size_minheight}"/>
                    <Setter Property="MinWidth" Value="{StaticResource size_minwidth}"/>
                    <Style.Triggers>
                        <Trigger Property="Visibility" Value="Visible">
                            <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity"/>
                                    <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"/>
                                    <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="1" To="0" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity"/>
                                    <DoubleAnimation From="1" To="0" Duration="0:0:0.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"/>
                                    <DoubleAnimation From="1" To="0" Duration="0:0:0.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="border_popup_titlebar" TargetType="Border" BasedOn="{StaticResource MaterialDesignToolBarMainPanelBorderStyle}">
                    <Setter Property="Background" Value="{StaticResource popup_titlebar_background}"/>
                    <Setter Property="CornerRadius" Value="{StaticResource size_CornerRadiusPopupTitlebar}"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>

            <Style x:Key="popup_slidedown_border" TargetType="Border" BasedOn="{StaticResource MaterialDesignToolBarMainPanelBorderStyle}">
                <Setter Property="Background" Value="{StaticResource popup_background}"/>
                <Setter Property="CornerRadius" Value="{StaticResource size_CornerRadiusSlidedownPopup}"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="{StaticResource size_small_margin}"/>
                <Setter Property="MinHeight" Value="{StaticResource size_minheight}"/>
                <Setter Property="Padding" Value="{StaticResource size_small_padding}"/>
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity"/>
                                    <DoubleAnimation From="-50" To="0" Duration="0:0:0.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="1" To="0" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity"/>
                                    <DoubleAnimation From="0" To="-50" Duration="0:0:0.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--=====-->

            <!--Context menu-->
            <Style x:Key="button_menu_context_menu" TargetType="ContextMenu" BasedOn="{StaticResource MaterialDesignContextMenu}">
                <Setter Property="Background" Value="{StaticResource context_menu_background}"/>
                <Setter Property="Foreground" Value="{StaticResource foreground_header}"/>
                <Setter Property="FontFamily" Value="{StaticResource LackRegular}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Background" Value="{StaticResource context_menu_hover_background}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--TextBlock-->
                <Style x:Key="textblock_header" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignHeadline1TextBlock}">
                    <Setter Property="Foreground" Value="{StaticResource foreground_header}"/>
                    <Setter Property="FontFamily" Value="{StaticResource LackRegular}"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="FontSize" Value="{StaticResource size_textblock_header}"/>
                </Style>

                <Style x:Key="textblock_window" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignHeadline1TextBlock}">
                    <Setter Property="Foreground" Value="{StaticResource foreground_header}"/>
                    <Setter Property="FontFamily" Value="{StaticResource LackRegular}"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="FontSize" Value="{StaticResource size_textblock_title_window}"/>
                </Style>

                <Style x:Key="textblock_popup_text" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignHeadline1TextBlock}">
                    <Setter Property="Foreground" Value="{StaticResource foreground_text}"/>
                    <Setter Property="FontFamily" Value="{StaticResource LackRegular}"/>
                    <Setter Property="FontWeight" Value="Regular"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="Margin" Value="5 -8 5 5"/>
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="FontSize" Value="{StaticResource size_textblock_title_window}"/>
                </Style>
            <!--=========-->

                <!--Button-->
                <Style x:Key="button_menu" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                <Setter Property="Foreground" Value="{StaticResource foreground_text}"/>
                <Setter Property="FontFamily" Value="{StaticResource LackRegular}"/>
                <Setter Property="FontWeight" Value="Regular"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontSize" Value="{StaticResource size_button_text}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" CornerRadius="{StaticResource size_CornerRadiusButton}" BorderThickness="0" Padding="10 5">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource button_titlebar_hover_background}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource button_titlebar_hover_background}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
                </Style>
            
            <Style x:Key="button_control_window" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                    <Setter Property="Foreground" Value="{StaticResource foreground_text}"/>
                    <Setter Property="FontFamily" Value="{StaticResource LackRegular}"/>
                    <Setter Property="FontWeight" Value="Regular"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Height" Value="{StaticResource size_control_button_height}"/>
                    <Setter Property="Width" Value="{StaticResource size_control_button_width}"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="FontSize" Value="{StaticResource size_button_text}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Padding="0">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource button_titlebar_hover_background}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter TargetName="border" Property="Background" Value="Transparent" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource button_titlebar_hover_background}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                </Style>

            <Style x:Key="button_control_close_window" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                    <Setter Property="Foreground" Value="{StaticResource foreground_text}"/>
                    <Setter Property="FontFamily" Value="{StaticResource LackRegular}"/>
                    <Setter Property="FontWeight" Value="Regular"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Height" Value="{StaticResource size_control_button_height}"/>
                    <Setter Property="Width" Value="{StaticResource size_control_button_width}"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="FontSize" Value="{StaticResource size_button_text}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Padding="0">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{StaticResource button_close_hover_background}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter TargetName="border" Property="Background" Value="Transparent" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource button_close_hover_background}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="button_main" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                    <Setter Property="Foreground" Value="{StaticResource foreground_header}"/>
                    <Setter Property="FontFamily" Value="{StaticResource LackRegular}"/>
                    <Setter Property="FontWeight" Value="Regular"/>
                    <Setter Property="Background" Value="{StaticResource button_main_background}"/>
                    <Setter Property="FontSize" Value="{StaticResource size_button_text}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="border" Background="{StaticResource button_main_background}" BorderBrush="Transparent" CornerRadius="{StaticResource size_CornerRadiusButton}" BorderThickness="0" Padding="10 5">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <Border.BitmapEffect>
                                        <DropShadowBitmapEffect Color="Black" Softness="{StaticResource size_shadow_button}" Opacity="{StaticResource size_shadow_opacity_button}" ShadowDepth="{StaticResource size_shadow_depth_button}"/>
                                    </Border.BitmapEffect>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource button_hover_main_background}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource button_main_background}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource button_hover_main_background}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="button_accent" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                <Setter Property="Foreground" Value="{StaticResource foreground_header}"/>
                <Setter Property="FontFamily" Value="{StaticResource LackRegular}"/>
                <Setter Property="FontWeight" Value="Regular"/>
                <Setter Property="Background" Value="{StaticResource button_accent_background}"/>
                <Setter Property="FontSize" Value="{StaticResource size_button_text}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{StaticResource button_accent_background}" BorderBrush="Transparent" CornerRadius="{StaticResource size_CornerRadiusButton}" BorderThickness="0" Padding="10 5">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect Color="Black" Softness="{StaticResource size_shadow_button}" Opacity="{StaticResource size_shadow_opacity_button}" ShadowDepth="{StaticResource size_shadow_depth_button}"/>
                                </Border.BitmapEffect>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource button_accent_hover_background}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource button_accent_background}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource button_hover_main_background}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="button_control_popup" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                <Setter Property="Foreground" Value="{StaticResource foreground_text}"/>
                <Setter Property="FontFamily" Value="{StaticResource LackRegular}"/>
                <Setter Property="FontWeight" Value="Regular"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Height" Value="{StaticResource size_control_popup_button_height}"/>
                <Setter Property="Width" Value="{StaticResource size_control_popup_button_width}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontSize" Value="{StaticResource size_button_text}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Padding="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource button_titlebar_hover_background}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource button_titlebar_hover_background}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--=========-->
            
                <!--Image-->
                <Style x:Key="image_control_window" TargetType="Image">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="{StaticResource size_control_image_margin}"/>
                </Style>
                <!--=====-->
            
            <!--=====-->

            <!--Set "Primary" and "Secondary" colors to theme-->
            <ResourceDictionary.MergedDictionaries>

                <!--Language-->
                <ResourceDictionary Source="/Strings/Strings.en-EN.xaml"/>
                <ResourceDictionary Source="/Strings/Strings.ru-RU.xaml"/>
                <!--========-->

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                <materialDesign:CustomColorTheme BaseTheme="Dark" PrimaryColor="#FF8C1857" SecondaryColor="#FF520931" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
